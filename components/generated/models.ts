// Code generated by wunderctl. DO NOT EDIT.

import type function_ArtistsGet from "../../.wundergraph/operations/artists/get";
import type { ExtractInput, ExtractResponse } from "@wundergraph/sdk/operations";

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface GraphQLError {
	message: string;
	path?: ReadonlyArray<string | number>;
}

export interface ArtistsByAreaInput {
	query: string;
}

export interface CapitalByCountryInput {
	countryCode: string;
}

export type ArtistsGetInput = ExtractInput<typeof function_ArtistsGet>;

export interface InternalArtistsByAreaInput {
	query: string;
}

export interface InternalCapitalByCountryInput {
	countryCode: string;
}

export interface InternalArtistsGetInput {
	country: string;
}

export interface InjectedArtistsByAreaInput {
	query: string;
}

export interface InjectedCapitalByCountryInput {
	countryCode: string;
}

export interface ArtistsByAreaResponse {
	data?: ArtistsByAreaResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface CapitalByCountryResponse {
	data?: CapitalByCountryResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface ArtistsGetResponse {
	data?: ArtistsGetResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface ArtistsByAreaResponseData {
	graphbrainz_search?: {
		artists?: {
			edges?: {
				node?: {
					name?: string;
					discogs?: {
						images: {
							url: string;
						}[];
						profile?: string;
					};
				};
			}[];
		};
	};
}

export interface CapitalByCountryResponseData {
	countries_country?: {
		name: string;
		capital?: string;
	};
}

export type ArtistsGetResponseData = ExtractResponse<typeof function_ArtistsGet>;
